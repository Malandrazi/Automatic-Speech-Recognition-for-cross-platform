/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "com_demos_MainActivity_CqtMarketApiInterface.h"
#include "market_platform.h"
#include "market_service.h"

jclass     g_mClass;     // Reference to JTX07class
jobject    g_mObject; 
JavaVM	   *gJavaVM;

jmethodID  g_id_Jni_GetURLStringFromAMS;
jmethodID  g_id_Jni_GetURLFileFromAMS;
jmethodID  g_id_Jni_ParseClassXML;
jmethodID  g_id_Jni_GetClassCount;
jmethodID  g_id_Jni_GetClassNodeName;
jmethodID  g_id_Jni_RefreshUI;

jmethodID  g_id_ParseApplicationXML;
jmethodID  g_id_jni_GetAppCount;
jmethodID  g_id_jni_GetAppNodeName;

jmethodID  g_id_jni_InstallPackage;
jmethodID  g_id_jni_uninstallApp;
jmethodID  g_id_jni_GetPackageName;
jmethodID  g_id_jni_InitPackmanamer;
jmethodID  g_id_jni_GetVersionInfo;

static char* jstringTostring(JNIEnv *env, jstring jstr)
{
	char* rtn = NULL;
	jclass clsstring = env->FindClass("java/lang/String");
	jstring strencode = env->NewStringUTF("utf-8");
	jmethodID mid = env->GetMethodID(clsstring, "getBytes", "(Ljava/lang/String;)[B");
	jbyteArray barr= (jbyteArray)env->CallObjectMethod(jstr, mid, strencode);
	jsize alen = env->GetArrayLength(barr);
	jbyte* ba = env->GetByteArrayElements(barr, JNI_FALSE);
	if (alen > 0)
	{
		rtn = (char*)new char[alen + 1];
		memcpy(rtn, ba, alen);
		rtn[alen] = 0;
	}
	env->ReleaseByteArrayElements(barr, ba, 0);
	return rtn;
}

//////////////////////////////////////////////////////////////////////////
//回调函数接口
bool pfnGetURLFileFromAMS(JNIEnv *env,const char* lpURL, const char* lpFile)
{
	MY_SAPI_DB_PRINTF("pfnGetURLFileFromAMS--1,lpURL=%s,lpFile=%s",lpURL,lpFile);
	jstring jURL = env->NewStringUTF(lpURL);
	jstring jFile = env->NewStringUTF(lpFile);
	MY_SAPI_DB_PRINTF("pfnGetURLFileFromAMS--2");

#if 0
	jclass classWA = env->FindClass("com/demos/cqtmarketapi");
	MY_SAPI_DB_PRINTF("pfnGetURLFileFromAMS--3");
	g_id_Jni_GetURLFileFromAMS = env->GetMethodID(classWA, "Jni_GetURLFileFromAMS","(Ljava/lang/String;Ljava/lang/String;)Z");
	MY_SAPI_DB_PRINTF("pfnGetURLFileFromAMS--4");
	jboolean bRet = env->CallBooleanMethod(classWA, g_id_Jni_GetURLFileFromAMS, jURL, jFile);
#else
	MY_SAPI_DB_PRINTF("pfnGetURLFileFromAMS--5 g_mClass = %d",g_mClass);
	MY_SAPI_DB_PRINTF("pfnGetURLFileFromAMS--5 g_id_Jni_GetURLFileFromAMS = %d",g_id_Jni_GetURLFileFromAMS);
	jboolean bRet = env->CallBooleanMethod(g_mObject, g_id_Jni_GetURLFileFromAMS, jURL, jFile);
#endif
	MY_SAPI_DB_PRINTF("pfnGetURLFileFromAMS--5 bRet = %d",bRet);
	return bRet;
}

char* pfnGetURLStringFromAMS(JNIEnv *env,const char* lpURL)//返回结果需要销毁内存,
{
	jstring jURL = env->NewStringUTF(lpURL);
	jstring jstr = (jstring)env->CallObjectMethod(g_mObject, g_id_Jni_GetURLStringFromAMS, jURL);
	return jstringTostring(env,jstr);
}

bool pfnParseClassXML(JNIEnv *env,const char* lpFile)
{
	MY_SAPI_DB_PRINTF("pfnParseClassXML--1 lpFile = %d",lpFile);
	jstring jFile = env->NewStringUTF(lpFile);	
	jboolean bRet = env->CallBooleanMethod(g_mObject, g_id_Jni_ParseClassXML, jFile);
	MY_SAPI_DB_PRINTF("pfnParseClassXML--over bRet = %d",bRet);
	return bRet;
}

int pfnGetClassCount(JNIEnv *env)
{
	return env->CallIntMethod(g_mObject, g_id_Jni_GetClassCount);
}

char* pfnGetClassNodeName(JNIEnv *env,int idx,const char* lpNodeName)//需要删除变量
{
	jstring jName = env->NewStringUTF(lpNodeName);	
	jstring jstr = (jstring)env->CallObjectMethod(g_mObject, g_id_Jni_GetClassNodeName, idx, jName);
	return jstringTostring(env,jstr);
}

void pfnvoidFunction_refreshUI(JNIEnv *env)
{
	MY_SAPI_DB_PRINTF("pfnvoidFunction_refreshUI--1");
	env->CallVoidMethod(g_mObject, g_id_Jni_RefreshUI);
	MY_SAPI_DB_PRINTF("pfnvoidFunction_refreshUI--over");
}

bool pfnParseAppXML(JNIEnv *env,const char* lpFile)
{
	MY_SAPI_DB_PRINTF("pfnParseAppXML--1 lpFile = %d",lpFile);
	jstring jFile = env->NewStringUTF(lpFile);	
	jboolean bRet = env->CallBooleanMethod(g_mObject, g_id_ParseApplicationXML, jFile);
	MY_SAPI_DB_PRINTF("pfnParseAppXML--over bRet = %d",bRet);
	return bRet;
}

int pfnGetAppCount(JNIEnv *env)
{
	return env->CallIntMethod(g_mObject, g_id_jni_GetAppCount);
}

char* pfnGetAppNodeName(JNIEnv *env,int idx,const char* lpNodeName)//需要删除变量
{
	jstring jName = env->NewStringUTF(lpNodeName);	
	jstring jstr = (jstring)env->CallObjectMethod(g_mObject, g_id_jni_GetAppNodeName, idx, jName);
	return jstringTostring(env,jstr);
}

bool pfnJNI_InstallPackage(JNIEnv *env, char* lpPackageFile)
{
	jstring jName = env->NewStringUTF(lpPackageFile);	
	return env->CallBooleanMethod(g_mObject, g_id_jni_InstallPackage,jName);
}

void pfnJNI_uninstallApp(JNIEnv *env, char* lpPackage)
{
	jstring jName = env->NewStringUTF(lpPackage);	
	env->CallVoidMethod(g_mObject, g_id_jni_uninstallApp,jName);
}

char* pfnJNI_GetPackageName(JNIEnv *env, char* lpPackageFile)
{
	jstring jName = env->NewStringUTF(lpPackageFile);	
	jstring jstr = (jstring)env->CallObjectMethod(g_mObject, g_id_jni_GetPackageName, jName);
	return jstringTostring(env,jstr);
}

bool pfnJNI_InitPackmanamer(JNIEnv *env)
{
	return env->CallBooleanMethod(g_mObject, g_id_jni_InitPackmanamer);
}

char* pfnJNI_GetVersionInfo(JNIEnv *env,char* lpPackage)
{
	jstring jName = env->NewStringUTF(lpPackage);	
	jstring jstr = (jstring)env->CallObjectMethod(g_mObject, g_id_jni_GetVersionInfo, jName);
	return jstringTostring(env,jstr);
}

//////////////////////////////////////////////////////////////////////////
/*
 * Class:     com_demos_MainActivity_CqtMarketApiInterface
 * Method:    JS_CQT_API_Init
 * Signature: ()I
 */
static CQTMarketService* g_cqtMarketService = 0;
JNIEXPORT jint JNICALL Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1CQT_1API_1Init
  (JNIEnv *env, jobject obj)
{
	MY_SAPI_DB_PRINTF("Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1CQT_1API_1Init--1");
	jclass clazz =env->GetObjectClass(obj);	
	g_mClass =(jclass)env->NewGlobalRef(clazz);
	g_mObject = env->NewGlobalRef(obj);
	MY_SAPI_DB_PRINTF("Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1CQT_1API_1Init--2");

	g_id_Jni_GetURLStringFromAMS = env->GetMethodID(g_mClass, "Jni_GetURLStringFromAMS","(Ljava/lang/String;)Ljava/lang/String;");
	g_id_Jni_GetURLFileFromAMS = env->GetMethodID(g_mClass, "Jni_GetURLFileFromAMS","(Ljava/lang/String;Ljava/lang/String;)Z");
	g_id_Jni_ParseClassXML = env->GetMethodID(g_mClass, "ParseClassXML","(Ljava/lang/String;)Z");
	g_id_Jni_GetClassCount = env->GetMethodID(g_mClass, "JNI_GetClassCount","()I");
	g_id_Jni_GetClassNodeName = env->GetMethodID(g_mClass, "JNI_GetClassNodeName","(ILjava/lang/String;)Ljava/lang/String;");
	g_id_Jni_RefreshUI = env->GetMethodID(g_mClass, "JNI_RefreshUI","()V");

	g_id_ParseApplicationXML = env->GetMethodID(g_mClass, "ParseApplicationXML","(Ljava/lang/String;)Z");
	g_id_jni_GetAppCount = env->GetMethodID(g_mClass, "JNI_GetAppCount","()I");
	g_id_jni_GetAppNodeName = env->GetMethodID(g_mClass, "JNI_GetAppNodeName","(ILjava/lang/String;)Ljava/lang/String;");

	g_id_jni_InstallPackage = env->GetMethodID(g_mClass, "JNI_InstallPackage","(Ljava/lang/String;)Z");
	g_id_jni_uninstallApp = env->GetMethodID(g_mClass, "JNI_uninstallApp","(Ljava/lang/String;)V");
	g_id_jni_GetPackageName = env->GetMethodID(g_mClass, "JNI_GetPackageName","(Ljava/lang/String;)Ljava/lang/String;");
	g_id_jni_InitPackmanamer = env->GetMethodID(g_mClass, "JNI_InitPackmanamer","()Z");
	g_id_jni_GetVersionInfo = env->GetMethodID(g_mClass, "JNI_GetVersionInfo","(Ljava/lang/String;)Ljava/lang/String;");

	MY_SAPI_DB_PRINTF("Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1CQT_1API_1Init--3");
	TGlobalParam tGlobalParam;
	tGlobalParam.env = env;
	tGlobalParam.jvm = gJavaVM;
	tGlobalParam.pfnGetClassCount = pfnGetClassCount;
	tGlobalParam.pfnGetClassNodeName = pfnGetClassNodeName;
	tGlobalParam.pfnGetURLFileFromAMS = pfnGetURLFileFromAMS;
	tGlobalParam.pfnGetURLStringFromAMS = pfnGetURLStringFromAMS;
	tGlobalParam.pfnParseClassXML = pfnParseClassXML;
	tGlobalParam.pfnRefreshUI = pfnvoidFunction_refreshUI;
	tGlobalParam.pfnParseAppXML = pfnParseAppXML;
	tGlobalParam.pfnGetAppCount = pfnGetAppCount;
	tGlobalParam.pfnGetAppNodeName = pfnGetAppNodeName;

	tGlobalParam.pfnPFNJNI_InstallPackage = pfnJNI_InstallPackage;
	tGlobalParam.pfnPFNJNI_uninstallApp = pfnJNI_uninstallApp;
	tGlobalParam.pfnPFNJNI_GetPackageName = pfnJNI_GetPackageName;
	tGlobalParam.pfnPFNJNI_InitPackmanamer = pfnJNI_InitPackmanamer;
	tGlobalParam.pfnPFNJNI_GetVersionInfo = pfnJNI_GetVersionInfo;

	MY_SAPI_DB_PRINTF("Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1CQT_1API_1Init--4");
	g_cqtMarketService = new CQTMarketService(&tGlobalParam);
	MY_SAPI_DB_PRINTF("Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1CQT_1API_1Init--5");
	g_cqtMarketService->CMS_StartService();
	MY_SAPI_DB_PRINTF("Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1CQT_1API_1Init--6");

	return 1;
}



JNIEXPORT jint JNICALL Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1CQT_1API_1Uninit
  (JNIEnv *env, jobject obj)
{
	if(g_cqtMarketService)
	{
		delete g_cqtMarketService;
	}
	g_cqtMarketService = 0;
	return 1;
}



/*
 * Class:     com_demos_MainActivity_CqtMarketApiInterface
 * Method:    JS_Class_GetCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1Class_1GetCount
  (JNIEnv *env, jobject obj)
{
	if(g_cqtMarketService)
	{
		return g_cqtMarketService->CMS_GetAppDataInfo()->CA_GetClassCount();
	}
	return 0;
}

/*
 * Class:     com_demos_MainActivity_CqtMarketApiInterface
 * Method:    JS_Class_GetName
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1Class_1GetName
  (JNIEnv *env, jobject obj, jint idx)
{
	jstring jName;
	if(g_cqtMarketService)
	{
		PAppClassData pClass = g_cqtMarketService->CMS_GetAppDataInfo()->CA_GetClassItem(idx);
		if(pClass)
		{
			jName = env->NewStringUTF(pClass->szClassName);
		}
	}
	
	return jName;
}


JNIEXPORT jstring JNICALL Java_com_demos_cqtmarketapi_JS_1Class_1GetID
  (JNIEnv *env, jobject obj, jint idx)
{
	jstring jID;
	if(g_cqtMarketService)
	{
		PAppClassData pClass = g_cqtMarketService->CMS_GetAppDataInfo()->CA_GetClassItem(idx);
		if(pClass)
		{
			jID = env->NewStringUTF(pClass->szClassID);
		}
	}
	
	return jID;
}

/*
 * Class:     com_demos_MainActivity_CqtMarketApiInterface
 * Method:    JS_Class_GetImg
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1Class_1GetImg
  (JNIEnv *env, jobject obj, jint idx)
{
	jstring jIcon;
	if(g_cqtMarketService)
	{
		PAppClassData pClass = g_cqtMarketService->CMS_GetAppDataInfo()->CA_GetClassItem(idx);
		if(pClass)
		{
			jIcon = env->NewStringUTF(pClass->szClassImgPath);
		}
	}
	
	return jIcon;
}

/*
 * Class:     com_demos_MainActivity_CqtMarketApiInterface
 * Method:    JS_AP_GetName
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1AP_1GetName
  (JNIEnv *env, jobject obj, jstring jID)
{
	PCqtApp pApp;
	jstring jStr;
	char* lpID = jstringTostring(env, jID);
	if(!lpID)
	{
		return jStr;
	}

	if(g_cqtMarketService)
	{
		pApp = g_cqtMarketService->CMS_GetAppDataInfo()->CA_GetAppItemFromID(lpID);
		if(pApp)
		{			
			jStr = env->NewStringUTF(pApp->tAppBaseInfo.szName);
		}
	}

	return jStr;
}

/*
 * Class:     com_demos_MainActivity_CqtMarketApiInterface
 * Method:    JS_AP_GetCompany
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1AP_1GetCompany
  (JNIEnv *env, jobject obj, jstring jID)
{
	PCqtApp pApp;
	jstring jStr;
	char* lpID = jstringTostring(env, jID);
	if(!lpID)
	{
		return jStr;
	}
	
	if(g_cqtMarketService)
	{
		pApp = g_cqtMarketService->CMS_GetAppDataInfo()->CA_GetAppItemFromID(lpID);
		if(pApp)
		{
			jStr = env->NewStringUTF(pApp->tAppBaseInfo.szCompany);
		}
	}
	
	return jStr;
}

/*
 * Class:     com_demos_MainActivity_CqtMarketApiInterface
 * Method:    JS_AP_GetImg
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1AP_1GetImg
  (JNIEnv *env, jobject obj, jstring jID)
{
	PCqtApp pApp;
	jstring jStr;
	char* lpID = jstringTostring(env, jID);
	if(!lpID)
	{
		return jStr;
	}
	
	if(g_cqtMarketService)
	{
		pApp = g_cqtMarketService->CMS_GetAppDataInfo()->CA_GetAppItemFromID(lpID);
		if(pApp)
		{
			jStr = env->NewStringUTF(pApp->tAppBaseInfo.szIcon);
		}
	}
	
	return jStr;
}

/*
 * Class:     com_demos_MainActivity_CqtMarketApiInterface
 * Method:    JS_AP_GetStar
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1AP_1GetStar
  (JNIEnv *env, jobject obj, jstring jID)
{
	PCqtApp pApp;
	char* lpID = jstringTostring(env, jID);
	if(!lpID)
	{
		return 0;
	}
	
	if(g_cqtMarketService)
	{
		pApp = g_cqtMarketService->CMS_GetAppDataInfo()->CA_GetAppItemFromID(lpID);
		if(pApp)
		{
			return pApp->tAppBaseInfo.nStar;
		}
	}
	
	return 0;
}

/*
 * Class:     com_demos_MainActivity_CqtMarketApiInterface
 * Method:    JS_AP_GetPrice
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1AP_1GetPrice
  (JNIEnv *env, jobject obj, jstring jID)
{
	PCqtApp pApp;
	jstring jStr;
	char* lpID = jstringTostring(env, jID);
	if(!lpID)
	{
		return jStr;
	}
	
	if(g_cqtMarketService)
	{
		pApp = g_cqtMarketService->CMS_GetAppDataInfo()->CA_GetAppItemFromID(lpID);
		if(pApp)
		{
			jStr = env->NewStringUTF(pApp->tAppBaseInfo.szPrice);
		}
	}
	
	return jStr;
}

/*
 * Class:     com_demos_MainActivity_CqtMarketApiInterface
 * Method:    JS_AP_GetDescribe
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1AP_1GetDescribe
  (JNIEnv *env, jobject obj, jstring jID)
{
	PCqtApp pApp;
	jstring jStr;
	char* lpID = jstringTostring(env, jID);
	if(!lpID)
	{
		return jStr;
	}
	
	if(g_cqtMarketService)
	{
		pApp = g_cqtMarketService->CMS_GetAppDataInfo()->CA_GetAppItemFromID(lpID);
		if(pApp)
		{
			jStr = env->NewStringUTF(pApp->tAppBaseInfo.szDescribe);
		}
	}
	
	return jStr;
}

/*
 * Class:     com_demos_MainActivity_CqtMarketApiInterface
 * Method:    JS_AP_GetVersion
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1AP_1GetVersion
  (JNIEnv *env, jobject obj, jstring jID)
{
	PCqtApp pApp;
	jstring jStr;
	char* lpID = jstringTostring(env, jID);
	if(!lpID)
	{
		return jStr;
	}
	
	if(g_cqtMarketService)
	{
		pApp = g_cqtMarketService->CMS_GetAppDataInfo()->CA_GetAppItemFromID(lpID);
		if(pApp)
		{
			jStr = env->NewStringUTF(pApp->tAppBaseInfo.szVersion);
		}
	}
	
	return jStr;
}

/*
 * Class:     com_demos_MainActivity_CqtMarketApiInterface
 * Method:    JS_AP_GetDownloadCount
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1AP_1GetDownloadCount
  (JNIEnv *env, jobject obj, jstring jID)
{
	PCqtApp pApp;
	char* lpID = jstringTostring(env, jID);
	if(!lpID)
	{
		return 0;
	}
	
	if(g_cqtMarketService)
	{
		pApp = g_cqtMarketService->CMS_GetAppDataInfo()->CA_GetAppItemFromID(lpID);
		if(pApp)
		{			
			return pApp->tAppBaseInfo.nDownCount;
		}
	}
	
	return 0;
}

/*
 * Class:     com_demos_MainActivity_CqtMarketApiInterface
 * Method:    JS_GetRecommendApCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1GetRecommendApCount
  (JNIEnv *env, jobject obj)
{
	return 0;
}

/*
 * Class:     com_demos_MainActivity_CqtMarketApiInterface
 * Method:    JS_GetRecommendAppID
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1GetRecommendAppID
  (JNIEnv *env, jobject obj)
{
	jstring jStr;
	return jStr;
}

/*
 * Class:     com_demos_MainActivity_CqtMarketApiInterface
 * Method:    JS_CLASS_AP_GetCount
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1CLASS_1AP_1GetCount
  (JNIEnv *env, jobject obj, jstring jID)
{	
	char* lpID = jstringTostring(env, jID);
	if(!lpID)
	{
		MY_SAPI_DB_PRINTF("Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1CLASS_1AP_1GetCount  ERROR");
		return 0;
	}
	
	if(g_cqtMarketService)
	{
		int nAppCount = g_cqtMarketService->CMS_GetAppDataInfo()->CA_GetAppCount(lpID);
		MY_SAPI_DB_PRINTF("Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1CLASS_1AP_1GetCount lpID=%s nAppCount = %d",lpID,nAppCount);
		return nAppCount;
	}

	MY_SAPI_DB_PRINTF("Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1CLASS_1AP_1GetCount  ERROR2");
	return 0;
}

/*
 * Class:     com_demos_MainActivity_CqtMarketApiInterface
 * Method:    JS_CLASS_AP_GetAppID
 * Signature: (Ljava/lang/String;I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1CLASS_1AP_1GetAppID
  (JNIEnv *env, jobject obj, jstring jID, jint nIdx)
{
	jstring jStr;
	char* lpID = jstringTostring(env, jID);
	if(!lpID)
	{
		MY_SAPI_DB_PRINTF("Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1CLASS_1AP_1GetAppID  ERROR");
		return jStr;
	}
	
	MY_SAPI_DB_PRINTF("Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1CLASS_1AP_1GetAppID  classID=%s,nIdx=%d",lpID,nIdx);
	if(g_cqtMarketService)
	{
		PCqtApp pAp = g_cqtMarketService->CMS_GetAppDataInfo()->CA_GetAppItem(lpID,nIdx);
		if(pAp)
		{
			MY_SAPI_DB_PRINTF("Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1CLASS_1AP_1GetAppID  ID=%s",pAp->tAppBaseInfo.szAppID);
			jStr = env->NewStringUTF(pAp->tAppBaseInfo.szAppID);
			return jStr;
		}
	}
	
	MY_SAPI_DB_PRINTF("Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1CLASS_1AP_1GetAppID  ERROR1");
	return jStr;
}


/*
 * Class:     com_demos_cqtmarketapi
 * Method:    JS_InstallPackage
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_demos_cqtmarketapi_JS_1InstallPackage
  (JNIEnv *env, jobject obj, jstring jID)
{
	jstring jStr;
	char* lpID = jstringTostring(env, jID);
	if(!lpID)
	{
		MY_SAPI_DB_PRINTF("Java_com_demos_cqtmarketapi_JS_1InstallPackage  ERROR");
		return 1;
	}
	
	MY_SAPI_DB_PRINTF("Java_com_demos_cqtmarketapi_JS_1InstallPackage  lpID=%s",lpID);
	if(g_cqtMarketService)
	{
		return g_cqtMarketService->m_pPackManager->CPM_InstallPackage(lpID);
	}

	return 2;
}

/*
 * Class:     com_demos_cqtmarketapi
 * Method:    JS_UnintallPackage
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_demos_cqtmarketapi_JS_1UnintallPackage
  (JNIEnv *env, jobject obj, jstring jID)
{
	jstring jStr;
	char* lpID = jstringTostring(env, jID);
	if(!lpID)
	{
		MY_SAPI_DB_PRINTF("Java_com_demos_cqtmarketapi_JS_1UnintallPackage  ERROR");
		return 1;
	}
	
	MY_SAPI_DB_PRINTF("Java_com_demos_cqtmarketapi_JS_1UnintallPackage  lpID=%s",lpID);
	if(g_cqtMarketService)
	{
		return g_cqtMarketService->m_pPackManager->CPM_UnintallPackage(lpID);
	}
	
	return 2;
}

/*
 * Class:     com_demos_cqtmarketapi
 * Method:    JS_IsInstallPackage
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_demos_cqtmarketapi_JS_1IsInstallPackage
  (JNIEnv *env, jobject obj, jstring jID)
{
	jstring jStr;
	char* lpID = jstringTostring(env, jID);
	if(!lpID)
	{
		MY_SAPI_DB_PRINTF("Java_com_demos_cqtmarketapi_JS_1IsInstallPackage  ERROR");
		return 1;
	}
	
	MY_SAPI_DB_PRINTF("Java_com_demos_cqtmarketapi_JS_1IsInstallPackage  lpID=%s",lpID);
	if(g_cqtMarketService)
	{
		return g_cqtMarketService->m_pPackManager->CPM_IsInstallPackage(lpID);
	}
	
	return 2;
}

/*
 * Class:     com_demos_cqtmarketapi
 * Method:    JS_IsUpdatePackage
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_demos_cqtmarketapi_JS_1IsUpdatePackage
  (JNIEnv *env, jobject obj, jstring jID)
{
	jstring jStr;
	char* lpID = jstringTostring(env, jID);
	if(!lpID)
	{
		MY_SAPI_DB_PRINTF("Java_com_demos_cqtmarketapi_JS_1IsUpdatePackage  ERROR");
		return 1;
	}
	
	MY_SAPI_DB_PRINTF("Java_com_demos_cqtmarketapi_JS_1IsUpdatePackage  lpID=%s",lpID);
	if(g_cqtMarketService)
	{
		return g_cqtMarketService->m_pPackManager->CPM_IsUpdatePackage(lpID);
	}
	
	return 2;
}

/*
 * Class:     com_demos_cqtmarketapi
 * Method:    JS_UpdatePackage
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_demos_cqtmarketapi_JS_1UpdatePackage
  (JNIEnv *env, jobject obj, jstring jID)
{
	jstring jStr;
	char* lpID = jstringTostring(env, jID);
	if(!lpID)
	{
		MY_SAPI_DB_PRINTF("Java_com_demos_cqtmarketapi_JS_1UpdatePackage  ERROR");
		return 1;
	}
	
	MY_SAPI_DB_PRINTF("Java_com_demos_cqtmarketapi_JS_1UpdatePackage  lpID=%s",lpID);
	if(g_cqtMarketService)
	{
		return g_cqtMarketService->m_pPackManager->CPM_UpdatePackage(lpID);
	}
	
	return 2;
}


static const char *classPathName ="com/demos/MainActivity/CqtMarketApiInterface";
static JNINativeMethod methods[] = {	
	{"JS_CQT_API_Init",  "()I",(void*)Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1CQT_1API_1Init},		
	{"JS_CQT_API_Uninit",   "()I", (void *)Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1CQT_1API_1Uninit},
	{"JS_Class_GetCount",   "()I", (void *)Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1Class_1GetCount},
	{"JS_Class_GetID",   "(I)Ljava/lang/String;", (void *)Java_com_demos_cqtmarketapi_JS_1Class_1GetID},	
	{"JS_Class_GetName",   "(I)Ljava/lang/String;", (void *)Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1Class_1GetName},
	{"JS_Class_GetImg",   "(I)Ljava/lang/String;", (void *)Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1Class_1GetImg},
	{"JS_AP_GetName",   "(Ljava/lang/String;)Ljava/lang/String;", (void *)Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1AP_1GetName},
	{"JS_AP_GetCompany",   "(Ljava/lang/String;)Ljava/lang/String;", (void *)Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1AP_1GetCompany},
	{"JS_AP_GetImg",   "(Ljava/lang/String;)Ljava/lang/String;", (void *)Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1AP_1GetImg},
	{"JS_AP_GetStar",   "(Ljava/lang/String;)I", (void *)Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1AP_1GetStar},
	{"JS_AP_GetPrice",   "(Ljava/lang/String;)Ljava/lang/String;", (void *)Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1AP_1GetPrice},
	{"JS_AP_GetDescribe",   "(Ljava/lang/String;)Ljava/lang/String;", (void *)Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1AP_1GetDescribe},
	{"JS_AP_GetVersion",   "(Ljava/lang/String;)Ljava/lang/String;", (void *)Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1AP_1GetVersion},
	{"JS_AP_GetDownloadCount",   "(Ljava/lang/String;)I", (void *)Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1AP_1GetDownloadCount},
	{"JS_GetRecommendApCount",   "()I", (void *)Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1GetRecommendApCount},
	{"JS_GetRecommendAppID",   "()Ljava/lang/String;", (void *)Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1GetRecommendAppID},
	{"JS_CLASS_AP_GetCount",   "(Ljava/lang/String;)I", (void *)Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1CLASS_1AP_1GetCount},	
	{"JS_CLASS_AP_GetAppID",   "(Ljava/lang/String;I)Ljava/lang/String;", (void *)Java_com_demos_MainActivity_00024CqtMarketApiInterface_JS_1CLASS_1AP_1GetAppID},
	{"JS_InstallPackage",   "(Ljava/lang/String;)I", (void *)Java_com_demos_cqtmarketapi_JS_1InstallPackage},
	{"JS_UnintallPackage",   "(Ljava/lang/String;)I", (void *)Java_com_demos_cqtmarketapi_JS_1UnintallPackage},
	{"JS_IsInstallPackage",  "(Ljava/lang/String;)I", (void *)Java_com_demos_cqtmarketapi_JS_1IsInstallPackage},
	{"JS_IsUpdatePackage",   "(Ljava/lang/String;)I", (void *)Java_com_demos_cqtmarketapi_JS_1IsUpdatePackage},
	{"JS_UpdatePackage",   "(Ljava/lang/String;)I", (void *)Java_com_demos_cqtmarketapi_JS_1UpdatePackage}
};

/*

  * Registerseveral native methods for one class.
  
*/
static int registerNativeMethods(JNIEnv* env, const char* className, JNINativeMethod* gMethods, int numMethods)								 
{
    jclass clazz;	
    clazz =env->FindClass(/*className*/"com/demos/cqtmarketapi");
    if (clazz ==NULL) 
	{		
		MY_SAPI_DB_PRINTF("Native registration unable to find class '%s'",className);		
        return JNI_FALSE;		
    }
	
    if(env->RegisterNatives(clazz, gMethods, numMethods) < 0) 
	{		
		MY_SAPI_DB_PRINTF("RegisterNatives failed for '%s'", className);		
        return JNI_FALSE;		
    }	
	
    return JNI_TRUE;	
}

static int registerNatives(JNIEnv* env)
{	
	if(!registerNativeMethods(env, classPathName, methods, sizeof(methods) / sizeof(methods[0]))) 
	{		
		return JNI_FALSE;		
	}	
	
	return JNI_TRUE;	
}


jint JNI_OnLoad(JavaVM* vm, void* reserved)
{	
	JNIEnv *env;	
	gJavaVM = vm;	
	int result;
	
	MY_SAPI_DB_PRINTF("JNI_OnLoad called");	
	if (vm->GetEnv((void**) &env, JNI_VERSION_1_4)!= JNI_OK) 
	{		
		MY_SAPI_DB_PRINTF("Failed to get the environment using GetEnv()");		
		return -1;
	}
	
	
	if (registerNatives(env) != JNI_TRUE)
	{		
		MY_SAPI_DB_PRINTF("ERROR: registerNatives failed");
        goto bail;		
    }	
    result =JNI_VERSION_1_4;	
	
bail:	
    return result;
	
}

